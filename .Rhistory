afro <- subset.data.frame(complete, source==9 | source==10 | source==12)
afro <- afro[3]
colnames(afro) <- c("surname")
afro$d_afro <- 1
common <- as.data.frame(c("RODRIGEZ", "MARTINEZ", "GONZALEZ", "GOMEZ", "LOPEZ", "HERNANDEZ", "PEREZ", "SANCHEZ", "RAMIREZ", "JIMENEZ", "GUTIERREZ"))
colnames(common) <- c("surname")
common$d_common <- 1
###############################################
#                    RR CALCULATIONS
###############################################
############################
#Define rare surnames = 300 holders +
#As the average population I take among the 20 most common surnames, those that end in -EZ
#In the text you should explain why
#############################
rare300start <- subset(simat2016, holders<=300 | simat2016$surname=="RODRIGUEZ" | simat2016$surname=="MARTINEZ" | simat2016$surname=="GONZALEZ" | simat2016$surname=="GOMEZ" | simat2016$surname=="LOPEZ" | simat2016$surname=="HERNANDEZ" | simat2016$surname=="PEREZ" | simat2016$surname=="SANCHEZ" | simat2016$surname=="RAMIREZ" | simat2016$surname=="JIMENEZ" | simat2016$surname=="GUTIERREZ", select = c(surname, holders))
#############################
#       MERGING DATA SETS
############################
inputs <- matrix(list(), 0, 1);
inputs[[length(inputs)+1]] <- indigenous;
inputs[[length(inputs)+1]] <- conquistadores;
inputs[[length(inputs)+1]] <- slaveowners;
inputs[[length(inputs)+1]] <- bankshareholders;
inputs[[length(inputs)+1]] <- jockey;
inputs[[length(inputs)+1]] <- afro;
inputs[[length(inputs)+1]] <- common;
merged <- data.frame(matrix(NA, nrow = 0, ncol = 1));
colnames(merged) <- "surname";
for (i in 1:length(inputs)){
merged <- merge(merged, unique(inputs[[i]]), by = c("surname", "surname"), all.x= T, all.y= T)
}
rare300merged <- merge(rare300start, merged, by = c("surname", "surname"), all.x = T, all.y=F)
rare300merged[is.na(rare300merged)] <- 0
mergeuniandes <- merge(rare300merged, andes, by = c("surname", "surname"), all.x = T, all.y = F)
mergeuniandes[is.na(mergeuniandes)] <- 0
rr1 <- data.frame(matrix(NA, nrow = nrow(mergeuniandes), ncol = length(totalandes)));
denominators <- mergeuniandes$holders / totsimat;
for (s in 1:nrow(mergeuniandes))
{
start <- 2+length(inputs)+1;
stop <- start + length(totalandes) - 1;
years <- mergeuniandes[s, start:stop];
rr1[s, 1:length(totalandes)] <- (years / totalandes) / denominators[s];
}
colnames(rr1) <- colnames(andes)[1:73]
rr1 <- cbind(rr1, mergeuniandes[1:(length(inputs)+2)])
rr1 <- rr1[,order(colnames(rr1))]
rm(afro, andes, bankshareholders, complete, conquistadores, indigenous, jockey, mergeuniandes,
rare300merged, rare300start, simat2016, slaveowners, uniandes, denominators, totalandes, totsimat,
s, start, stop)
#####################################################
#              DATA FOR IMPLIED B
#####################################################
#Surname base with dummies. All surnames, all groups.
rr1 <- reshape(rr1, idvar="surname", varying = list(1:73), v.names="RR", direction="long")
rr1 <- rr1[c("time", "surname", "holders", "RR", "d_indi", "d_afro", "d_bank", "d_conquis", "d_jockey", "d_slaves")]
#Base with 5 years average
rr2 <- subset.data.frame(rr1, time>=3) #with time<=o ==1946, so I am starting in 1949 to make possible the 20 years lag with 5 years cohort
Level <- cut(rr2$time, seq(3,73,by=5), right=F)
rr2 <- aggregate(rr2[4], list(rr2$surname,Level), mean, na.rm=T) #here I am taking the mean, should I try with the median?
rr2$RR <- log(1+rr2$RR)
colnames(rr2) <- c("surname", "cohort", "RR" )
#taking the median instead of the mean, to check which one I should use. I decided to use the mean
#rr2 <- subset.data.frame(rr1, time>=3) #with time<=o I am starting in 1954
#Level <- cut(rr2$time, seq(3,73,by=5), right=F)
#rr2_median <- aggregate(rr2[4], list(rr2$surname,Level), median, na.rm=T) #here I am taking the mean, should I try with the median?
#rr2_median$RR <- log(1+rr2_median$RR)
#colnames(rr2_median) <- c("surname", "cohort", "RR")
#rr2_median <- rr2_median %>% group_by(surname) %>% mutate(RR_L = lag(RR, 7, order_by=cohort))
#Creating the Lag
require(dplyr)
rr2 <- rr2 %>% group_by(surname) %>% mutate(RR_L = lag(RR, 5, order_by=cohort))
#New data.fram with lag (using mean)
rr2_mean <- merge(rr2, merged, by = c("surname", "surname"), all.x = T, all.y=F )
#rr2_median <- merge(rr2_median, merged, by = c("surname", "surname"), all.x = T, all.y=F )
for (d in 5:ncol(rr2_mean)) {               #so for the dummies to be zero instead of NA
rr2_mean[[d]][which(is.na(rr2_mean[[d]]))] <- 0
}
#with median
#for (d in 5:ncol(rr2_median)) {
#rr2_median[[d]][which(is.na(rr2_median[[d]]))] <- 0
#}
rr2_mean$dif <- rr2_mean$RR - rr2_mean$RR_L
rr2_mean_w_zeros <- subset.data.frame(rr2_mean, rr2_mean$dif!=0)
indigenous <- subset.data.frame(rr2_mean_w_zeros, d_indi==1)
cohort_i <- indigenous$cohort
indigenous <- aggregate(indigenous[3], by=list(cohort_i), mean, na.rm=T)
colnames(indigenous) <- c("cohort", "RR")
afro <- subset.data.frame(rr2_mean_w_zeros, d_afro==1)
cohort_a <- afro$cohort
afro <- aggregate(afro[3], by=list(cohort_a), mean, na.rm=T)
colnames(afro) <-c("cohort", "RR")
banks <- subset.data.frame(rr2_mean_w_zeros, d_bank==1)
cohort_b <- banks$cohort
bankshareholders <- aggregate(banks[3], by=list(cohort_b), mean, na.rm=T)
colnames(bankshareholders) <-c("cohort", "RR")
slavesowners <- subset.data.frame(rr2_mean_w_zeros, d_slaves==1)
cohort_s <- slavesowners$cohort
slavesowners <- aggregate(slavesowners[3], by=list(cohort_s), mean, na.rm=T)
colnames(slavesowners) <-c("cohort", "RR")
conquistadores <- subset.data.frame(rr2_mean_w_zeros, d_conquis==1)
cohort_c <- conquistadores$cohort
conquistadores <- aggregate(conquistadores[3], by=list(cohort_c), mean, na.rm=T)
colnames(conquistadores) <-c("cohort", "RR")
jockey <- subset.data.frame(rr2_mean_w_zeros, d_jockey==1)
cohort_j <- jockey$cohort
jockey <- aggregate(jockey[3], by=list(cohort_j), mean, na.rm=T)
colnames(jockey) <-c("cohort", "RR")
common <- subset.data.frame(rr2_mean_w_zeros, d_common==1)
cohort_ez <- common$cohort
common <- aggregate(common[3], by=list(cohort_ez), mean, na.rm=T)
colnames(common) <- c("cohort", "RR")
inputs <- matrix(list(), 0, 1);
inputs[[length(inputs)+1]] <- indigenous;
inputs[[length(inputs)+1]] <- conquistadores;
inputs[[length(inputs)+1]] <- slavesowners;
inputs[[length(inputs)+1]] <- bankshareholders;
inputs[[length(inputs)+1]] <- jockey;
inputs[[length(inputs)+1]] <- afro;
inputs[[length(inputs)+1]] <- common;
merged <- data.frame(matrix(NA, nrow = 0, ncol = 1));
colnames(merged) <- "cohort";
for (i in 1:length(inputs)){
merged <- merge(merged, unique(inputs[[i]]), by = c("cohort", "cohort"), all.x= T, all.y= T)
}
colnames(merged) <- c("cohort", "Indigenous", "conquistadores", "slavesowners", "bankshareholders", "jockey", "afro", "common")
graph <- reshape(merged, idvar="cohort", varying =c("Indigenous", "conquistadores", "slavesowners", "bankshareholders", "jockey", "afro", "common"),
v.names="RR", direction="long")
graph$cohort <- as.numeric(graph$cohort)
colnames(graph) <- c("cohort", "Groups", "RR")
graph$Groups[graph$Groups==1] <- "indigenous"
graph$Groups[graph$Groups==2] <- "conquistadores"
graph$Groups[graph$Groups==3] <- "slavesowners"
graph$Groups[graph$Groups==4] <- "bankshareholders"
graph$Groups[graph$Groups==5] <- "jockey"
graph$Groups[graph$Groups==6] <- "afro"
graph$Groups[graph$Groups==7] <- "common"
library(extrafont)
# Install **TTF** Latin Modern Roman fonts from www.fontsquirrel.com/fonts/latin-modern-roman
# Import the newly installed LModern fonts, change the pattern according to the
# filename of the lmodern ttf files in your fonts folder
font_import(pattern = "lmodern*")
loadfonts(device = "win")
par(family = "LM Roman 10")
p <- ggplot(graph, aes(x=cohort, y=RR, group=Groups)) + geom_point(aes(shape=Groups)) + geom_line(aes(linetype=Groups)) + scale_x_continuous(breaks = c(1:14), labels = seq(1950, 2015, by=5)) + xlab("cohorts") + ylab("log RR (5 years. average)")
p  + scale_colour_grey() + theme_bw()  + theme(legend.position="bottom", legend.box = "horizontal",legend.title=element_blank(),
panel.border = element_blank(),panel.background = element_blank())
font_import(pattern = "lmodern*")
library(extrafont)
# Install **TTF** Latin Modern Roman fonts from www.fontsquirrel.com/fonts/latin-modern-roman
# Import the newly installed LModern fonts, change the pattern according to the
# filename of the lmodern ttf files in your fonts folder
font_import(pattern = "lmodern*")
loadfonts(device = "win")
par(family = "LM Roman 10")
p <- ggplot(graph, aes(x=cohort, y=RR, group=Groups)) + geom_point(aes(shape=Groups)) + geom_line(aes(linetype=Groups)) + scale_x_continuous(breaks = c(1:14), labels = seq(1950, 2015, by=5)) + xlab("cohorts") + ylab("log RR (5 years. average)")
p  + scale_colour_grey() + theme_bw()  + theme(legend.position="bottom", legend.box = "horizontal",legend.title=element_blank(),
panel.border = element_blank(),panel.background = element_blank())
getwd()
require(gsubfn)
library(plyr)
require(ggplot2)
require(stringr)
library(data.table)
require(dynlm)
require(zoo)
#SIMAT DATA: Third grade 2016.
simat2016 <- read.csv("Tercero_SIMAT_2016_CleanData.csv", sep = ",")
simat2016$apellido1_ <- as.character(simat2016$apellido1_)
simat2016 <- simat2016[c(2)]
simat2016 <- count(simat2016, vars = "apellido1_") #frequency
colnames(simat2016) <- c("surname", "holders") #Replace name of columns
totsimat <- colSums(simat2016[sapply(simat2016, is.numeric)], na.rm = TRUE) #Total Number of obs in SIMAT
#SET GROUPS
complete <- read.csv("cc_revisada.csv", sep = ",")
# UNINANDES
uniandes <- subset.data.frame(complete, rol2==1 & source==2 | source==8)
uniandes <- uniandes[c(3,9)] #Keep columns surname and year of graduation
colnames(uniandes) <- c("surname", "year") #Columns names
#Frequency by year
andes <- count(uniandes, c("surname", "year"))
colnames(andes) <- c("surname", "year", " ")
andes <- reshape(andes, timevar = "year", idvar = "surname", direction = "wide")
andes[is.na(andes)] <- 0
andes <- cbind(andes, " .1949"=0)
andes <- andes[,order(colnames(andes))]
totalandes <- colSums(andes[sapply(andes, is.numeric)], na.rm = T)
# CALL GROUPS
##############
conquistadores <- subset.data.frame(complete, source==13)
conquistadores <- conquistadores[c(3)]
colnames(conquistadores) <- c("surname")
conquistadores$surname <- as.character(conquistadores$surname)
conquistadores$d_conquis <- 1
indigenous <- subset.data.frame(complete, source==5)
indigenous <- indigenous[c(3)]
colnames(indigenous) <- c("surname")
indigenous$surname <- as.character(indigenous$surname)
indigenous$d_indi <- 1
slaveowners <- subset.data.frame(complete, source==7)
slaveowners <- slaveowners[c(3)]
colnames(slaveowners) <- c("surname")
slaveowners$surname <- as.character(slaveowners$surname)
slaveowners$d_slaves <- 1
bankshareholders <- subset.data.frame(complete, source==3)
bankshareholders <- bankshareholders[c(3)]
colnames(bankshareholders) <- c("surname")
bankshareholders$d_bank <- 1
jockey <- subset.data.frame(complete, source==6)
jockey <- jockey[c(3)]
colnames(jockey) <- c("surname")
jockey$d_jockey <- 1
afro <- subset.data.frame(complete, source==9 | source==10 | source==12)
afro <- afro[3]
colnames(afro) <- c("surname")
afro$d_afro <- 1
common <- as.data.frame(c("RODRIGEZ", "MARTINEZ", "GONZALEZ", "GOMEZ", "LOPEZ", "HERNANDEZ", "PEREZ", "SANCHEZ", "RAMIREZ", "JIMENEZ", "GUTIERREZ"))
colnames(common) <- c("surname")
common$d_common <- 1
###############################################
#                    RR CALCULATIONS
###############################################
############################
#Define rare surnames = 300 holders +
#As the average population I take among the 20 most common surnames, those that end in -EZ
#In the text you should explain why
#############################
rare300start <- subset(simat2016, holders<=300 | simat2016$surname=="RODRIGUEZ" | simat2016$surname=="MARTINEZ" | simat2016$surname=="GONZALEZ" | simat2016$surname=="GOMEZ" | simat2016$surname=="LOPEZ" | simat2016$surname=="HERNANDEZ" | simat2016$surname=="PEREZ" | simat2016$surname=="SANCHEZ" | simat2016$surname=="RAMIREZ" | simat2016$surname=="JIMENEZ" | simat2016$surname=="GUTIERREZ", select = c(surname, holders))
rare_graph <- subset(simat2016, holders>3 & holders<=300) #rare graph without commons
rare_graph$x <- 1:6000
plot.default(rare_graph$x, rare_graph$holders) # Think abouth the graph. How to calculate the "frecuency" and the distribution of the surnames or of the RR
plot.default(rare_graph$x, rare_graph$holders, xlab = "surnames", ylab = "holders") # Think abouth the graph. How to calculate the "frecuency" and the distribution of the surnames or of the RR
inputs <- matrix(list(), 0, 1);
inputs[[length(inputs)+1]] <- indigenous;
inputs[[length(inputs)+1]] <- conquistadores;
inputs[[length(inputs)+1]] <- slaveowners;
inputs[[length(inputs)+1]] <- bankshareholders;
inputs[[length(inputs)+1]] <- jockey;
inputs[[length(inputs)+1]] <- afro;
inputs[[length(inputs)+1]] <- common;
merged <- data.frame(matrix(NA, nrow = 0, ncol = 1));
colnames(merged) <- "surname";
for (i in 1:length(inputs)){
merged <- merge(merged, unique(inputs[[i]]), by = c("surname", "surname"), all.x= T, all.y= T)
}
rare300merged <- merge(rare300start, merged, by = c("surname", "surname"), all.x = T, all.y=F)
rare300merged[is.na(rare300merged)] <- 0
mergeuniandes <- merge(rare300merged, andes, by = c("surname", "surname"), all.x = T, all.y = F)
mergeuniandes[is.na(mergeuniandes)] <- 0
rr1 <- data.frame(matrix(NA, nrow = nrow(mergeuniandes), ncol = length(totalandes)));
denominators <- mergeuniandes$holders / totsimat;
for (s in 1:nrow(mergeuniandes))
{
start <- 2+length(inputs)+1;
stop <- start + length(totalandes) - 1;
years <- mergeuniandes[s, start:stop];
rr1[s, 1:length(totalandes)] <- (years / totalandes) / denominators[s];
}
colnames(rr1) <- colnames(andes)[1:73]
rr1 <- cbind(rr1, mergeuniandes[1:(length(inputs)+2)])
rr1 <- rr1[,order(colnames(rr1))]
rm(afro, andes, bankshareholders, complete, conquistadores, indigenous, jockey, mergeuniandes,
rare300merged, rare300start, simat2016, slaveowners, uniandes, denominators, totalandes, totsimat,
s, start, stop)
View(rr1)
View(rr1)
?boxplot
rr1 <- reshape(rr1, idvar="surname", varying = list(1:73), v.names="RR", direction="long")
rr1 <- rr1[c("time", "surname", "holders", "RR", "d_indi", "d_afro", "d_bank", "d_conquis", "d_jockey", "d_slaves")]
#Base with 5 years average
rr2 <- subset.data.frame(rr1, time>=3) #with time<=o ==1946, so I am starting in 1949 to make possible the 20 years lag with 5 years cohort
Level <- cut(rr2$time, seq(3,73,by=5), right=F)
rr2 <- aggregate(rr2[4], list(rr2$surname,Level), mean, na.rm=T) #here I am taking the mean, should I try with the median?
rr2$RR <- log(1+rr2$RR)
colnames(rr2) <- c("surname", "cohort", "RR" )
View(rr2)
View(rr2)
#Creating the Lag
require(dplyr)
rr2 <- rr2 %>% group_by(surname) %>% mutate(RR_L = lag(RR, 5, order_by=cohort))
#New data.fram with lag (using mean)
rr2_mean <- merge(rr2, merged, by = c("surname", "surname"), all.x = T, all.y=F )
#rr2_median <- merge(rr2_median, merged, by = c("surname", "surname"), all.x = T, all.y=F )
for (d in 5:ncol(rr2_mean)) {               #so for the dummies to be zero instead of NA
rr2_mean[[d]][which(is.na(rr2_mean[[d]]))] <- 0
}
View(rr2)
View(rr2)
View(rr2_mean)
View(rr2_mean)
View(rare_graph)
View(rare_graph)
rare_graph <- count(rare_graph, vars = "holders") #frequency
rare_graph <- subset(simat2016, holders>3 & holders<=300) #rare graph without commons
rare_graph$x <- 1:6000
plot.default(rare_graph$x, rare_graph$holders, xlab = "surnames", ylab = "holders") # Think abouth the graph. How to calculate the "frecuency" and the distribution of the surnames or of the RR
rare_graph <- subset(simat2016, holders>3 & holders<=300) #rare graph without commons
simat2016 <- read.csv("Tercero_SIMAT_2016_CleanData.csv", sep = ",")
simat2016$apellido1_ <- as.character(simat2016$apellido1_)
simat2016 <- simat2016[c(2)]
simat2016 <- count(simat2016, vars = "apellido1_") #frequency
colnames(simat2016) <- c("surname", "holders") #Replace name of columns
rare_graph <- subset(simat2016, holders>3 & holders<=300) #rare graph without commons
simat2016 <- read.csv("Tercero_SIMAT_2016_CleanData.csv", sep = ",")
simat2016$apellido1_ <- as.character(simat2016$apellido1_)
simat2016 <- simat2016[c(2)]
simat2016 <- count(simat2016, vars = "apellido1_") #frequency
colnames(simat2016) <- c("surname", "holders") #Replace name of columns
setwd("C:/Users/HOME/Dropbox/SM_201820")
require(gsubfn)
library(plyr)
require(ggplot2)
require(stringr)
library(data.table)
require(dynlm)
simat2016 <- read.csv("Tercero_SIMAT_2016_CleanData.csv", sep = ",")
simat2016$apellido1_ <- as.character(simat2016$apellido1_)
simat2016 <- simat2016[c(2)]
simat2016 <- count(simat2016, vars = "apellido1_") #frequency
colnames(simat2016) <- c("surname", "holders") #Replace name of columns
rare_graph <- subset(simat2016, holders>3 & holders<=300) #rare graph without commons
rare_graph <- count(rare_graph, vars = "holders") #frequency
plot.default(rare_graph$holders, rare_graph$freq, xlab = "holders", ylab = "freq") # Think abouth the graph. How to calculate the "frecuency" and the distribution of the surnames or of the RR
rare_graph2 <- count(simat2016, vars = "holders")
plot.default(rare_graph2$holders, rare_graph2$freq)
#require(maps)
#install.packages("mapdata")
require(dplyr)
#require(mapdata)
library(ggplot2)
#library(ggrepel)
#library(sp)
#install.packages('sf')
#install.packages('rworldmap',dependencies=TRUE)
library(rgdal)
#install.packages("labelled")
#install.packages("devtools")
#install.packages('ipumsr')
require("ipumsr")
#install.packages("viridis", repos="http://cloud.r-project.org")
require(viridis)
library(data.table)
#install.packages("tidyverse")
library(tidyverse)
getwd()
setwd("E:/IPUMS-I/Calculos y datos")
#require(maps)
#install.packages("mapdata")
require(dplyr)
#require(mapdata)
library(ggplot2)
#library(ggrepel)
#library(sp)
#install.packages('sf')
#install.packages('rworldmap',dependencies=TRUE)
library(rgdal)
#install.packages("labelled")
#install.packages("devtools")
#install.packages('ipumsr')
require("ipumsr")
#install.packages("viridis", repos="http://cloud.r-project.org")
require(viridis)
library(data.table)
#install.packages("tidyverse")
library(tidyverse)
getwd()
setwd("E:/IPUMS-I/Calculos y datos")
ddi <- read_ipums_ddi("ipumsi_00006.xml")
data <- read_ipums_micro(ddi)
year=1973
data_heaping <- data[YEAR==year & SEX==1]
age_people_m <- data_heaping %>%
count(AGE) %>%
rename(age_p=n)
age_people_m$AGE <- as.numeric(age_people_m$AGE)
age_people_m <- as.data.frame(age_people_m)
summary(age_people_m)
age_people_m$SEX <- "Masculine"
data <- as.data.table(data)
year=1973
data_heaping <- data[YEAR==year & SEX==1]
age_people_m <- data_heaping %>%
count(AGE) %>%
rename(age_pm=n)
age_people_m$AGE <- as.numeric(age_people_m$AGE)
age_people_m <- as.data.frame(age_people_m)
summary(age_people_m)
age_people_m$SEX <- "Masculine"
data_heaping <- data[YEAR==year & SEX==2]
age_people_f <- data_heaping %>%
count(AGE) %>%
rename(age_pf=n)
age_people_f$AGE <- as.numeric(age_people_f$AGE)
age_people_f <- as.data.frame(age_people_f)
summary(age_people_f)
age_people_f$SEX <- "Femenine"
sex_ratio <- merge(age_people_f, age_people_m, by =c("AGE", "AGE"))
sex_ratio$sex_ratio <- sex_ratio$age_pm/sex_ratio$age_pf
ggplot(sex_ratio, x=AGE, y=sex_ratio) + geom_point(aes(x=AGE, y=sex_ratio))+ geom_line(aes(x=AGE, y=sex_ratio))+ xlab("Age") + ylab("Ratio of males to females") +
scale_x_continuous(breaks=seq(from=0, to=100, by=5)) +
theme_bw()  + theme(panel.background = element_blank())
year=1985
data_heaping <- data[YEAR==year & SEX==1]
age_people_m <- data_heaping %>%
count(AGE) %>%
rename(age_pm=n)
age_people_m$AGE <- as.numeric(age_people_m$AGE)
age_people_m <- as.data.frame(age_people_m)
summary(age_people_m)
age_people_m$SEX <- "Masculine"
data_heaping <- data[YEAR==year & SEX==2]
age_people_f <- data_heaping %>%
count(AGE) %>%
rename(age_pf=n)
age_people_f$AGE <- as.numeric(age_people_f$AGE)
age_people_f <- as.data.frame(age_people_f)
summary(age_people_f)
age_people_f$SEX <- "Femenine"
sex_ratio <- merge(age_people_f, age_people_m, by =c("AGE", "AGE"))
sex_ratio$sex_ratio <- sex_ratio$age_pm/sex_ratio$age_pf
ggplot(sex_ratio, x=AGE, y=sex_ratio) + geom_point(aes(x=AGE, y=sex_ratio))+ geom_line(aes(x=AGE, y=sex_ratio))+ xlab("Age") + ylab("Ratio of males to females") +
scale_x_continuous(breaks=seq(from=0, to=100, by=5)) +
theme_bw()  + theme(panel.background = element_blank())
year=1993
data_heaping <- data[YEAR==year & SEX==1]
age_people_m <- data_heaping %>%
count(AGE) %>%
rename(age_pm=n)
age_people_m$AGE <- as.numeric(age_people_m$AGE)
age_people_m <- as.data.frame(age_people_m)
summary(age_people_m)
age_people_m$SEX <- "Masculine"
data_heaping <- data[YEAR==year & SEX==2]
age_people_f <- data_heaping %>%
count(AGE) %>%
rename(age_pf=n)
age_people_f$AGE <- as.numeric(age_people_f$AGE)
age_people_f <- as.data.frame(age_people_f)
summary(age_people_f)
age_people_f$SEX <- "Femenine"
sex_ratio <- merge(age_people_f, age_people_m, by =c("AGE", "AGE"))
sex_ratio$sex_ratio <- sex_ratio$age_pm/sex_ratio$age_pf
ggplot(sex_ratio, x=AGE, y=sex_ratio) + geom_point(aes(x=AGE, y=sex_ratio))+ geom_line(aes(x=AGE, y=sex_ratio))+ xlab("Age") + ylab("Ratio of males to females") +
scale_x_continuous(breaks=seq(from=0, to=100, by=5)) +
theme_bw()  + theme(panel.background = element_blank())
year=2005
data_heaping <- data[YEAR==year & SEX==1]
age_people_m <- data_heaping %>%
count(AGE) %>%
rename(age_pm=n)
age_people_m$AGE <- as.numeric(age_people_m$AGE)
age_people_m <- as.data.frame(age_people_m)
summary(age_people_m)
age_people_m$SEX <- "Masculine"
data_heaping <- data[YEAR==year & SEX==2]
age_people_f <- data_heaping %>%
count(AGE) %>%
rename(age_pf=n)
age_people_f$AGE <- as.numeric(age_people_f$AGE)
age_people_f <- as.data.frame(age_people_f)
summary(age_people_f)
age_people_f$SEX <- "Femenine"
sex_ratio <- merge(age_people_f, age_people_m, by =c("AGE", "AGE"))
sex_ratio$sex_ratio <- sex_ratio$age_pm/sex_ratio$age_pf
ggplot(sex_ratio, x=AGE, y=sex_ratio) + geom_point(aes(x=AGE, y=sex_ratio))+ geom_line(aes(x=AGE, y=sex_ratio))+ xlab("Age") + ylab("Ratio of males to females") +
scale_x_continuous(breaks=seq(from=0, to=100, by=5)) +
theme_bw()  + theme(panel.background = element_blank())
year=2005
data_heaping <- data[YEAR==year & SEX==1]
age_people_m <- data_heaping %>%
count(AGE) %>%
rename(age_pm=n)
age_people_m$AGE <- as.numeric(age_people_m$AGE)
age_people_m <- as.data.frame(age_people_m)
summary(age_people_m)
age_people_m$SEX <- "Masculine"
data_heaping <- data[YEAR==year & SEX==2]
age_people_f <- data_heaping %>%
count(AGE) %>%
rename(age_pf=n)
age_people_f$AGE <- as.numeric(age_people_f$AGE)
age_people_f <- as.data.frame(age_people_f)
summary(age_people_f)
age_people_f$SEX <- "Femenine"
sex_ratio <- merge(age_people_f, age_people_m, by =c("AGE", "AGE"))
sex_ratio$sex_ratio <- sex_ratio$age_pm/sex_ratio$age_pf
ggplot(sex_ratio, x=AGE, y=sex_ratio) + geom_point(aes(x=AGE, y=sex_ratio))+ geom_line(aes(x=AGE, y=sex_ratio))+ xlab("Age") + ylab("Ratio of males to females") +
scale_x_continuous(breaks=seq(from=0, to=100, by=5)) +
theme_bw()  + theme(panel.background = element_blank())
year=1973
data_heaping <- data[YEAR==year & SEX==1]
age_people_m <- data_heaping %>%
count(AGE) %>%
rename(age_pm=n)
age_people_m$AGE <- as.numeric(age_people_m$AGE)
age_people_m <- as.data.frame(age_people_m)
summary(age_people_m)
age_people_m$SEX <- "Masculine"
data_heaping <- data[YEAR==year & SEX==2]
age_people_f <- data_heaping %>%
count(AGE) %>%
rename(age_pf=n)
age_people_f$AGE <- as.numeric(age_people_f$AGE)
age_people_f <- as.data.frame(age_people_f)
summary(age_people_f)
age_people_f$SEX <- "Femenine"
sex_ratio <- merge(age_people_f, age_people_m, by =c("AGE", "AGE"))
sex_ratio$sex_ratio <- sex_ratio$age_pm/sex_ratio$age_pf
ggplot(sex_ratio, x=AGE, y=sex_ratio) + geom_point(aes(x=AGE, y=sex_ratio))+ geom_line(aes(x=AGE, y=sex_ratio))+ xlab("Age") + ylab("Ratio of males to females") +
scale_x_continuous(breaks=seq(from=0, to=100, by=5)) +
theme_bw()  + theme(panel.background = element_blank())
